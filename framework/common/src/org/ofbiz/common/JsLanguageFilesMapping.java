/*******************************************************************************
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *******************************************************************************/


package org.ofbiz.common;

import java.util.Map;

import javolution.util.FastMap;


public final class JsLanguageFilesMapping {

    // DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA CHANGE
    // Rather use the createJsLanguageFileMapping service to create or update it. You will still need to compile thereafter

    public static class datejs {

        private static Map<String, String> localeFiles = FastMap.newInstance();
        private static String defaultDateJs = "/images/jquery/plugins/datejs/date-en-US.js";

        static {
            localeFiles.put("ar", "/images/jquery/plugins/datejs/date-en-US.js");
            localeFiles.put("zh", "/images/jquery/plugins/datejs/date-en-US.js");
            localeFiles.put("nl", "/images/jquery/plugins/datejs/date-nl-NL.js");
            localeFiles.put("en", "/images/jquery/plugins/datejs/date-en-US.js");
            localeFiles.put("fr", "/images/jquery/plugins/datejs/date-fr-FR.js");
            localeFiles.put("de", "/images/jquery/plugins/datejs/date-de-DE.js");
            localeFiles.put("hi", "/images/jquery/plugins/datejs/date-en-US.js");
            localeFiles.put("it", "/images/jquery/plugins/datejs/date-it-IT.js");
            localeFiles.put("pt", "/images/jquery/plugins/datejs/date-pt-PT.js");
            localeFiles.put("ro", "/images/jquery/plugins/datejs/date-ro-RO.js");
            localeFiles.put("ru", "/images/jquery/plugins/datejs/date-ru-RU.js");
            localeFiles.put("es", "/images/jquery/plugins/datejs/date-es-ES.js");
            localeFiles.put("th", "/images/jquery/plugins/datejs/date-th-TH.js");
        }

        public static String getFilePath(String locale) {
            if (datejs.localeFiles.containsKey(locale)) {
                return datejs.localeFiles.get(locale);
            }
            return datejs.defaultDateJs;
        }

    }

    public static class jquery {
        private static Map<String, String> localeFiles = FastMap.newInstance();
        private static String defaultDateJs = "/images/jquery/ui/i18n/jquery.ui.datepicker-en.js";

        static {
            localeFiles.put("ar", "/images/jquery/ui/i18n/jquery.ui.datepicker-ar.js");
            localeFiles.put("zh", "/images/jquery/ui/i18n/jquery.ui.datepicker-en.js");
            localeFiles.put("nl", "/images/jquery/ui/i18n/jquery.ui.datepicker-nl.js");
            localeFiles.put("en", "/images/jquery/ui/i18n/jquery.ui.datepicker-en.js");
            localeFiles.put("fr", "/images/jquery/ui/i18n/jquery.ui.datepicker-fr.js");
            localeFiles.put("de", "/images/jquery/ui/i18n/jquery.ui.datepicker-de.js");
            localeFiles.put("hi", "/images/jquery/ui/i18n/jquery.ui.datepicker-hi.js");
            localeFiles.put("it", "/images/jquery/ui/i18n/jquery.ui.datepicker-it.js");
            localeFiles.put("pt", "/images/jquery/ui/i18n/jquery.ui.datepicker-pt.js");
            localeFiles.put("ro", "/images/jquery/ui/i18n/jquery.ui.datepicker-ro.js");
            localeFiles.put("ru", "/images/jquery/ui/i18n/jquery.ui.datepicker-ru.js");
            localeFiles.put("es", "/images/jquery/ui/i18n/jquery.ui.datepicker-es.js");
            localeFiles.put("th", "/images/jquery/ui/i18n/jquery.ui.datepicker-th.js");
        }

        public static String getFilePath(String locale) {
            if (datejs.localeFiles.containsKey(locale)) {
                return jquery.localeFiles.get(locale);
            }
            return jquery.defaultDateJs;
        }

    }

    public static class validation {
        private static Map<String, String> localeFiles = FastMap.newInstance();
        private static String defaultValidation = "/images/webapp/images/jquery/plugins/validate/localization/messages_en.js";

        static {
            localeFiles.put("ar", "/images/jquery/plugins/validate/localization/messages_ar.js");
            localeFiles.put("zh", "/images/jquery/plugins/validate/localization/messages_zh.js");
            localeFiles.put("nl", "/images/jquery/plugins/validate/localization/messages_nl.js");
            localeFiles.put("en", "/images/jquery/plugins/validate/localization/messages_en.js");
            localeFiles.put("fr", "/images/jquery/plugins/validate/localization/messages_fr.js");
            localeFiles.put("de", "/images/jquery/plugins/validate/localization/messages_de.js");
            localeFiles.put("hi", "/images/jquery/plugins/validate/localization/messages_en.js");
            localeFiles.put("it", "/images/jquery/plugins/validate/localization/messages_it.js");
            localeFiles.put("pt", "/images/jquery/plugins/validate/localization/messages_en.js");
            localeFiles.put("ro", "/images/jquery/plugins/validate/localization/messages_ro.js");
            localeFiles.put("ru", "/images/jquery/plugins/validate/localization/messages_ru.js");
            localeFiles.put("es", "/images/jquery/plugins/validate/localization/messages_es.js");
            localeFiles.put("th", "/images/jquery/plugins/validate/localization/messages_th.js");
        }

        public static String getFilePath(String locale) {
            if (validation.localeFiles.containsKey(locale)) {
                return validation.localeFiles.get(locale);
            }
            return validation.defaultValidation;
        }
    }

    public static class dateTime {
        private static Map<String, String> localeFiles = FastMap.newInstance();
        private static String defaultDateTime = "/images/webapp/images/jquery/ui/i18n/jquery.ui.datepicker-en.js";

        static {
            localeFiles.put("ar", "/images/jquery/plugins/datetimepicker/localization/jquery-ui-timepicker-en.js");
            localeFiles.put("zh", "/images/jquery/plugins/datetimepicker/localization/jquery-ui-timepicker-en.js");
            localeFiles.put("nl", "/images/jquery/plugins/datetimepicker/localization/jquery-ui-timepicker-nl.js");
            localeFiles.put("en", "/images/jquery/plugins/datetimepicker/localization/jquery-ui-timepicker-en.js");
            localeFiles.put("fr", "/images/jquery/plugins/datetimepicker/localization/jquery-ui-timepicker-fr.js");
            localeFiles.put("de", "/images/jquery/plugins/datetimepicker/localization/jquery-ui-timepicker-de.js");
            localeFiles.put("hi", "/images/jquery/plugins/datetimepicker/localization/jquery-ui-timepicker-en.js");
            localeFiles.put("it", "/images/jquery/plugins/datetimepicker/localization/jquery-ui-timepicker-it.js");
            localeFiles.put("pt", "/images/jquery/plugins/datetimepicker/localization/jquery-ui-timepicker-pt.js");
            localeFiles.put("ro", "/images/jquery/plugins/datetimepicker/localization/jquery-ui-timepicker-ro.js");
            localeFiles.put("ru", "/images/jquery/plugins/datetimepicker/localization/jquery-ui-timepicker-ru.js");
            localeFiles.put("es", "/images/jquery/plugins/datetimepicker/localization/jquery-ui-timepicker-es.js");
            localeFiles.put("th", "/images/jquery/plugins/datetimepicker/localization/jquery-ui-timepicker-th.js");
        }

        public static String getFilePath(String locale) {
            if (dateTime.localeFiles.containsKey(locale)) {
                return dateTime.localeFiles.get(locale);
            }
            return dateTime.defaultDateTime;
        }
    }
}
